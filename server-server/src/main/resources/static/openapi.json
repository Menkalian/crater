{
  "openapi" : "3.0.0",
  "servers" : [
    {
      "url" : "https://crater.menkalian.de",
      "description" : "Default public production server"
    },
    {
      "url" : "http://localhost:8080",
      "description" : "Your local running instance"
    }
  ],
  "info" : {
    "description" : "`crater` is a to manage the data for a \"party\"-Application.\nThe main purpose of the backend is managing the database and data versions.\n\nThe project also provides a `client-baseclient`-module which compiles to JVM, JS and native code, so you can use it directly in your applications.",
    "version" : "1.0.0",
    "title" : "Crater",
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    }
  },
  "tags" : [
    {
      "name" : "task",
      "description" : "All API Endpoints for access to \"task\" objects."
    },
    {
      "name" : "telemetrie",
      "description" : "Telemetrie-Endpoints to report issues (used primarily for the clients implemented in the `draco`-project).\nIf you have any problems with the usage of the api, please open an issue on GitHub."
    },
    {
      "name" : "version",
      "description" : "API-Endpoints for the content version and obtaining patches."
    }
  ],
  "paths" : {
    "/task" : {
      "put" : {
        "summary" : "Inserts a new task into the database",
        "description" : "",
        "parameters" : [],
        "operationId" : "createNewTask",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                }
              }
            }
          },
          "400" : {
            "description" : "Data invalid"
          }
        },
        "tags" : [
          "task"
        ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Task"
              }
            }
          }
        }
      }
    },
    "/task/all" : {
      "get" : {
        "summary" : "Reads all available tasks from the server",
        "description" : "",
        "parameters" : [],
        "operationId" : "getAllActiveTasks",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        },
        "tags" : [
          "task"
        ]
      }
    },
    "/task/{id}" : {
      "get" : {
        "summary" : "Read an specific task",
        "description" : "",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Id of the task"
          }
        ],
        "operationId" : "getTask",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags" : [
          "task"
        ]
      },
      "delete" : {
        "summary" : "Removes an existing task",
        "description" : "",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : true,
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Id of the task"
          }
        ],
        "operationId" : "removeQuestion",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "tags" : [
          "task"
        ]
      }
    },
    "/version/content" : {
      "get" : {
        "summary" : "",
        "description" : "Gets the current content version of the database",
        "operationId" : "getCurrentContentVersion",
        "responses" : {
          "200" : {
            "description" : "Default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          }
        },
        "tags" : [
          "version"
        ]
      }
    },
    "/version/patch" : {
      "get" : {
        "summary" : "",
        "description" : "Creates patch information for updating the local database",
        "parameters" : [
          {
            "name" : "startVersion",
            "in" : "header",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "format" : "int64",
              "default" : "1"
            },
            "description" : "Start version of the patch to generate"
          },
          {
            "name" : "targetVersion",
            "in" : "header",
            "required" : false,
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            },
            "description" : "Target version of the patch to generate"
          }
        ],
        "operationId" : "getChangeLog",
        "responses" : {
          "200" : {
            "description" : "Default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ChangeLog"
                  }
                }
              }
            }
          }
        },
        "tags" : [
          "version"
        ]
      }
    },
    "/telemetrie/upload" : {
      "post" : {
        "summary" : "",
        "description" : "",
        "parameters" : [],
        "operationId" : "uploadReport",
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "tags" : [
          "telemetrie"
        ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TelemetrieReport"
              }
            }
          }
        },
        "security" : []
      }
    }
  },
  "externalDocs" : {
    "description" : "Check the [GitHub-Page](https://github.com/menkalian/crater) for an overview of all available documentation.",
    "url" : "https://github.com/menkalian/crater"
  },
  "components" : {
    "schemas" : {
      "TaskCategory" : {
        "type" : "string",
        "enum" : [
          "TRUTH",
          "DARE",
          "NEVER_HAVE_I_EVER",
          "CHALLENGE",
          "MINIGAME",
          "RULE",
          "WHO_WOULD",
          "MAKE_A_CHOICE",
          "TEAM_GAME",
          "DRINK"
        ]
      },
      "TaskLanguage" : {
        "type" : "string",
        "enum" : [
          "GERMAN"
        ]
      },
      "Task" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "removedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "language" : {
            "$ref" : "#/components/schemas/TaskLanguage"
          },
          "difficulty" : {
            "type" : "integer",
            "minimum" : 1,
            "exclusiveMinimum" : false,
            "maximum" : 10,
            "exclusiveMaximum" : false
          },
          "category" : {
            "$ref" : "#/components/schemas/TaskCategory"
          },
          "text" : {
            "type" : "string"
          },
          "severityMultiplyer" : {
            "type" : "number",
            "format" : "double"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "key" : {
                  "type" : "string"
                },
                "value" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "ChangeLog" : {
        "type" : "object",
        "properties" : {
          "oldVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "newVersion" : {
            "type" : "integer",
            "format" : "int64"
          },
          "addedTasks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Task"
            }
          },
          "removedIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        }
      },
      "TelemetrieReport" : {
        "type" : "object",
        "properties" : {
          "reporterName" : {
            "type" : "string",
            "nullable" : true
          },
          "reporterEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "reportText" : {
            "type" : "string",
            "nullable" : true
          },
          "logs" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "logFileName" : {
                  "type" : "string"
                },
                "logDomain" : {
                  "type" : "string"
                },
                "date" : {
                  "type" : "string",
                  "format" : "date-time"
                },
                "logData" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "auth_token" : {
        "type" : "apiKey",
        "name" : "auth",
        "in" : "header"
      }
    },
    "links" : {},
    "callbacks" : {}
  }
}